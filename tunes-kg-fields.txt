"collection_iri" 
"melody_id" (str)
"melody_iri" (str) # required
"melody_description_url" (str)
"melody_title" (str)
"melody_title_id" (str)
"melody_title_in_source" (str)
"melody_types" (list) {'vocal', 'instrumental', 'reel', 'jig', 'hornpipe', ...}
"composers" (list of dict)
- "person_id" (int)
- "person_iri" (str) #required
- "person_WKD_ID" (str)
- "person_VIAF_ID" (str)
- "person_GND_ID" (str)
- "person_DNB_ID" (str)
- "person_name" (str)
- "person_alternative_names" (list of str)
- "person_url" (str)
- "person_dates" (str) 
- "person_roles" (list of str)
- "person_year_of_birth_verbatim" (str)
- "person_year_of_death_verbatim" (str)
- "person_year_of_birth_approximate" (int)
- "person_year_of_death_approximate" (int)
- "person_place_of_birth_name" (str)
- "person_place_of_birth_longitude" (float)
- "person_place_of_birth_latitude" (float)
"melody_stanza_number" (int)
"melody_voice_number" (int)
"melody_work_number" (int)
"melody_movement_number" (int)
"melody_excerpt_number" (int)
"melody_formatted_reference" (str)
"source_id" (int)
"source_iri" (str)  # required (if source is present)
"source_title" (str)
"source_title_id" (str)
"source_title_on_source" (str)
"source_publisher" (str)
"source_place_of_publishing" (str)
"source_dating" (string)
"source_sorting_year" (int)
"source_library_siglum" (str)
"source_scan_url" (str)
"source_description_url" (str)
"source_type" {'manuscript','print','audio','website','other'} # 
"source_scribes" (list of dict)
- "person_id" (int)
- "person_iri" (str) #required
- "person_name" (str)
- "person_url" (str)
- "person_dates" (str) 
- "person_roles" (list of str)
- "person_year_of_birth_verbatim" (str)
- "person_year_of_death_verbatim" (str)
- "person_year_of_birth_approximate" (int)
- "person_year_of_death_approximate" (int)
- "person_place_of_birth_name" (str)
- "person_place_of_birth_longitude" (float)
- "person_place_of_birth_latitude" (float)
"source_current_owner_id" (int)
"source_current_owner_iri" (str)
"source_current_owner_name" (str)
"source_former_owners" (list of iri)
- "source_former_owner_id" (int)
- "source_former_owner_iri" (str)
- "source_former_owner_name" (str)
"source_former_owners_types" (list of {'Person', 'Institution'})
"melody_serial_number_in_source" (str)
"melody_page_number_in_source" (str)
"melody_singers" (list of dict)
- "person_id" (int)
- "person_iri" (str) #required
- "person_name" (str)
- "person_url" (str)
- "person_dates" (str) 
- "person_roles" (list of str)
- "person_year_of_birth_verbatim" (str)
- "person_year_of_death_verbatim" (str)
- "person_year_of_birth_approximate" (int)
- "person_year_of_death_approximate" (int)
- "person_place_of_birth_name" (str)
- "person_place_of_birth_longitude" (float)
- "person_place_of_birth_latitude" (float)
"melody_year_of_recording" 
"melody_month_of_recording" 
"melody_day_of_recording" 
"melody_place_of_recording_name" (str)
"melody_place_of_recording_latitude" (float)
"melody_place_of_recording_longitude" (float)
"melody_textfamily_id" (int)
"melody_textfamily_iri" (str)  # required (if textfamily is present)
"melody_lyrics_first_line" (str)
"tunefamily_id" (str)
"tunefamily_iri" (str)  # required (if tunefamily is present)
"tunefamily_name" (str)
"tunefamily_description_url" (str)
"melody_tunefamily_confidence" {'weak','neutral','strong'} # weak, but no 'variation'
"melody_related_to_tunefamily" (str, iri) # 'variation
"melody_geographic_origin" (list of str)
"melody_image_url" (str)
"melody_audio_url" (str)
"melody_comment" (str)
