PREFIX ma: <https://w3id.org/polifonia/ontology/music-algorithm/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX core:  <http://w3id.org/polifonia/ontology/core/>
PREFIX mm:  <http://w3id.org/polifonia/ontology/music-meta/>
PREFIX src: <http://w3id.org/polifonia/ontology/source/>
PREFIX pon-resource: <http://w3id.org/polifonia/resource/tunes/>

SELECT DISTINCT ?uniq_title
WHERE {

  VALUES(?uri_query) {
    (<http://w3id.org/polifonia/resource/tunes/rism230419/MusicEntity/500000675>)
    (<http://w3id.org/polifonia/resource/tunes/MTC-FS-INST-2.0/MusicEntity/72288/Stanza/NLB072288_01>)
    (<http://w3id.org/polifonia/resource/tunes/rism230419/MusicEntity/500239909/CompositionPart/500239909-1_2_1>)
    (<http://w3id.org/polifonia/resource/tunes/thesession20211212/MusicEntity/29700>)
  }
  
  ?uri_query core:title ?title .

  OPTIONAL { #Find ID of the entity in collection
    #Figure out the MusicEntity and retrieve id in collection
    {
      #For MusicEntities
      ?uri_query a mm:MusicEntity .
      ?uri_query core:id ?entity_id . #How else to bind ?entity_iri with the value of ?uri_query ?
      ?entity_iri core:id ?entity_id .
    }
    UNION
    {
      #For Parts
      ?uri_query core:isPartOf ?entity_iri .
      ?entity_iri a mm:MusicEntity .
    }

    ?entity_iri src:hasIdentifier [
      a src:Identifier ;
      src:hasIdentifierType <http://w3id.org/polifonia/resource/tunes/IdentifierType/IDInCollection> ;
      src:hasIdentifierValue ?id_in_collection 
    ] .
  }

  BIND(IF(
    BOUND(?id_in_collection),
    concat(?title, " (", ?id_in_collection , ")"),
    ?title)
    AS ?uniq_title
  )
    

}
