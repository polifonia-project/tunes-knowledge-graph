PREFIX xyz: <http://sparql.xyz/facade-x/data/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX fx: <http://sparql.xyz/facade-x/ns/>
PREFIX mm:  <http://w3id.org/polifonia/ontology/music-meta/>
PREFIX mp:  <http://w3id.org/polifonia/ontology/music-projection/>
PREFIX mr:  <http://w3id.org/polifonia/ontology/music-representation/>
PREFIX core:  <http://w3id.org/polifonia/ontology/core/>
PREFIX tunes:  <http://w3id.org/polifonia/ontology/tunes/>
PREFIX src: <http://w3id.org/polifonia/ontology/source/>
PREFIX pon-resource: <http://w3id.org/polifonia/resource/tunes/>
PREFIX prov: <http://www.w3.org/ns/prov#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>

CONSTRUCT {
    ?tunefamily_iri a core:Collection, tunes:TuneFamily ;
        core:isDefinedBy <pon-resource:CollectionConcept/TuneFamily> ;
        core:id ?tunefamily_id ;  # add to ontology
        core:name ?tunefamily_name ;
        core:description ?tunefamily_description_url .

    <pon-resource:CollectionConcept/TuneFamily> a core:CollectionConcept ;
        rdfs:label "Melodies that belong to the same tune family" ; #how to do this properly?
        core:hasMember ?tunefamily_iri .

}


WHERE {
    SERVICE <x-sparql-anything:> {

        fx:properties fx:location ?_filepath ;
            fx:media-type  "application/json" .

        ?base_root a fx:root ;
            ?tf_slot ?tf_base .

        ?tf_base 
            xyz:tunefamily_iri ?tunefamily_iri_temp ;
            xyz:tunefamily_id ?tunefamily_id ;
            xyz:tunefamily_name ?tunefamily_name ;
            xyz:tunefamily_url ?tunefamily_description_url .

        BIND(IRI(?tunefamily_iri_temp) as ?tunefamily_iri)

    }
}

